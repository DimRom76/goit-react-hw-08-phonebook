{"version":3,"sources":["redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-reducer.js","Components/PrivateRoute.js","Components/PublicRoute.js","routes.js","Components/Navigation/AuthNav.js","Components/Navigation/Logout.js","Components/Navigation/Navigation.js","App.js","redux/store.js","index.js","Components/Navigation/Navigation.module.css","Components/Modal/Modal.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-operation.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","Components/Modal/Modal.js"],"names":["actions","loginUserRequest","createAction","loginUserSuccess","loginUserError","logoutUserRequest","logoutUserSuccess","logoutUserError","registrationUserRequest","registrationUserSuccess","registrationUserError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","axios","defaults","baseURL","token","headers","common","Authorization","operations","loginUser","credentials","dispatch","a","authActions","post","response","data","message","registrationUser","logoutUser","getCurrentUser","getState","persistedToken","auth","get","selectors","getIsAuthenticated","state","isAuthenticated","getUsername","user","name","getError","error","getLoading","loading","initialUserState","email","setUser","_","payload","createReducer","userAction","setToken","setTrue","setFalse","setError","userReducer","combineReducers","connect","authSelectors","Component","component","redirectTo","routeProps","render","props","to","restricted","routes","home","register","login","contacts","AuthNav","className","s","mainLink","activeClassName","mainLinkActive","mapDispatchToProps","authOperations","Button","variant","color","style","marginLeft","onClick","AppBar","position","Toolbar","mainNav","exact","HomeView","lazy","ContactsView","LoginView","RegistrationView","App","this","onGetCurretnUser","prevProps","errorLogin","toast","warn","Container","maxWidth","fallback","path","isAuthLoading","Modal","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","persistReducer","authReducer","devTools","process","storePersistor","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","module","exports","fetchContactsRequest","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","editContactRequest","editContactSuccess","editContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","operationContacts","fetchContacts","then","catch","addContact","values","deleteContact","contactId","delete","editContact","id","patch","getAllContacts","items","getFilter","filter","operationSelectors","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","el","indexOf","contact","map","todo","modalRoot","querySelector","handleKeyDown","e","code","onClose","handleBackdropClick","event","currentTarget","target","window","addEventListener","removeEventListener","createPortal","Modal__backdrop","Modal__content","children"],"mappings":"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","file":"static/js/main.8762f39b.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nconst loginUserRequest = createAction('auth/loginUserRequest');\nconst loginUserSuccess = createAction('auth/loginUserSuccess');\nconst loginUserError = createAction('auth/loginUserError');\n\nconst logoutUserRequest = createAction('auth/logoutUserRequest');\nconst logoutUserSuccess = createAction('auth/logoutUserSuccess');\nconst logoutUserError = createAction('auth/logoutUserError');\n\nconst registrationUserRequest = createAction('auth/registrationUserRequest');\nconst registrationUserSuccess = createAction('auth/registrationUserSuccess');\nconst registrationUserError = createAction('auth/registrationUserError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nconst actions = {\n  loginUserRequest,\n  loginUserSuccess,\n  loginUserError,\n  logoutUserRequest,\n  logoutUserSuccess,\n  logoutUserError,\n  registrationUserRequest,\n  registrationUserSuccess,\n  registrationUserError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n\nexport default actions;\n","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst registrationUser = credentials => async dispatch => {\n  dispatch(authActions.registrationUserRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registrationUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registrationUserError(error.message));\n  }\n};\n\nconst loginUser = credentials => async dispatch => {\n  dispatch(authActions.loginUserRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginUserError(error.message));\n  }\n};\n\nconst logoutUser = () => async dispatch => {\n  dispatch(authActions.logoutUserRequest());\n\n  try {\n    const response = await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.logoutUserError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nconst operations = { loginUser, registrationUser, logoutUser, getCurrentUser };\nexport default operations;\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getError = state => state.auth.error;\n\nconst getLoading = state => state.auth.loading;\n\nconst getUsername = state => state.auth.user.name;\n\nconst selectors = {\n  getIsAuthenticated,\n  getUsername,\n  getError,\n  getLoading,\n};\n\nexport default selectors;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport userAction from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\nconst setUser = (_, { payload }) => payload.user;\nconst user = createReducer(initialUserState, {\n  [userAction.registrationUserSuccess]: setUser,\n  [userAction.loginUserSuccess]: setUser,\n  [userAction.logoutUserSuccess]: () => initialUserState,\n  [userAction.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst initialToken = null;\nconst setToken = (_, { payload }) => payload.token;\nconst token = createReducer(initialToken, {\n  [userAction.registrationUserSuccess]: setToken,\n  [userAction.loginUserSuccess]: setToken,\n  [userAction.logoutUserSuccess]: () => initialToken,\n});\n\nconst setTrue = () => true;\nconst setFalse = () => false;\n\nconst loading = createReducer(false, {\n  [userAction.registrationUserRequest]: setTrue,\n  [userAction.registrationUserSuccess]: setFalse,\n  [userAction.registrationUserError]: setFalse,\n  [userAction.loginUserRequest]: setTrue,\n  [userAction.loginUserSuccess]: setFalse,\n  [userAction.loginUserError]: setFalse,\n  [userAction.logoutUserRequest]: setTrue,\n  [userAction.logoutUserSuccess]: setFalse,\n  [userAction.logoutUserError]: setFalse,\n  [userAction.getCurrentUserRequest]: setTrue,\n  [userAction.getCurrentUserSuccess]: setFalse,\n  [userAction.getCurrentUserError]: setFalse,\n});\n\nconst setError = (_, { payload }) => payload;\nconst error = createReducer(null, {\n  [userAction.registrationUserRequest]: () => '',\n  [userAction.registrationUserSuccess]: () => '',\n  [userAction.registrationUserError]: setError,\n  [userAction.loginUserRequest]: () => '',\n  [userAction.loginUserSuccess]: () => '',\n  [userAction.loginUserError]: setError,\n  [userAction.logoutUserRequest]: () => '',\n  [userAction.logoutUserSuccess]: () => '',\n  [userAction.logoutUserError]: setError,\n  [userAction.getCurrentUserRequest]: () => '',\n  [userAction.getCurrentUserSuccess]: () => '',\n  [userAction.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [userAction.registrationUserSuccess]: setTrue,\n  [userAction.loginUserSuccess]: setTrue,\n  [userAction.logoutUserSuccess]: setFalse,\n  [userAction.getCurrentUserSuccess]: setTrue,\n  [userAction.registrationUserError]: setFalse,\n  [userAction.loginUserError]: setFalse,\n  [userAction.getCurrentUserError]: setFalse,\n});\n\nconst userReducer = combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  loading,\n  error,\n});\n\nexport default userReducer;\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","const routes = {\n  home: '/',\n  register: '/register',\n  login: '/login',\n  contacts: '/contacts',\n};\n\nexport default routes;\n","import React from 'react';\nimport routes from '../../routes';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navigation.module.css';\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to={routes.login}\n        className={s.mainLink}\n        activeClassName={s.mainLinkActive}\n      >\n        Login\n      </NavLink>\n      <NavLink\n        to={routes.register}\n        className={s.mainLink}\n        activeClassName={s.mainLinkActive}\n      >\n        Registration\n      </NavLink>\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations, authSelectors } from '../../redux/auth';\nimport { Button } from '@material-ui/core';\n\nfunction Logout({ name, logoutUser }) {\n  return (\n    <div>\n      <span>Welcome, {name}</span>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        style={{ marginLeft: 10 }}\n        onClick={logoutUser}\n      >\n        Logout\n      </Button>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  name: authSelectors.getUsername(state),\n});\n\nconst mapDispatchToProps = {\n  logoutUser: authOperations.logoutUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Logout);\n","import React from 'react';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport routes from '../../routes';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\nimport AuthNav from './AuthNav';\nimport Logout from './Logout';\nimport s from './Navigation.module.css';\n\nfunction Navigation({ isAuthenticated }) {\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar className={s.mainNav}>\n        <div>\n          <NavLink\n            to={routes.home}\n            exact\n            className={s.mainLink}\n            activeClassName={s.mainLinkActive}\n          >\n            Home\n          </NavLink>\n          {isAuthenticated && (\n            <NavLink\n              to={routes.contacts}\n              className={s.mainLink}\n              activeClassName={s.mainLinkActive}\n            >\n              Contacts\n            </NavLink>\n          )}\n        </div>\n        {isAuthenticated ? <Logout /> : <AuthNav />}\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import { Route, Switch } from 'react-router-dom';\nimport { Component, Suspense, lazy } from 'react';\nimport { Container } from '@material-ui/core';\nimport { connect } from 'react-redux';\n\nimport { ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { authOperations, authSelectors } from './redux/auth/';\n\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\nimport Navigation from './Components/Navigation';\nimport Modal from './Components/Modal';\nimport routes from './routes';\n\nimport './App.css';\n\nconst HomeView = lazy(() =>\n  import('./views/HomeView.js' /* webpackChunkName: \"home-page\" */),\n);\n\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView.js' /* webpackChunkName: \"contact-page\" */),\n);\n\nconst LoginView = lazy(() =>\n  import('./views/LoginView.js' /* webpackChunkName: \"login-page\" */),\n);\n\nconst RegistrationView = lazy(() =>\n  import(\n    './views/RegistrationView.js' /* webpackChunkName: \"registration-page\" */\n  ),\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurretnUser();\n  }\n\n  componentDidUpdate(prevProps) {\n    const errorLogin = this.props.errorLogin;\n    if (errorLogin !== prevProps.errorLogin) {\n      errorLogin && toast.warn(`Ошибка! ${errorLogin}`);\n    }\n  }\n\n  render() {\n    return (\n      <Container maxWidth=\"md\">\n        <Navigation />\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <Route path={routes.home} component={HomeView} exact />\n            <PublicRoute\n              path={routes.register}\n              restricted\n              component={RegistrationView}\n              redirectTo={routes.contacts}\n            />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              component={LoginView}\n              redirectTo={routes.contacts}\n            />\n            <PrivateRoute\n              path={routes.contacts}\n              component={ContactsView}\n              redirectTo={routes.login}\n            />\n            <Route render={() => <h1>Page not found</h1>} />\n          </Switch>\n        </Suspense>\n        <ToastContainer />\n        {this.props.isAuthLoading && (\n          <Modal>\n            <h1>Авторизация...</h1>\n          </Modal>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errorLogin: authSelectors.getError(state),\n  isAuthLoading: authSelectors.getLoading(state),\n});\n\nconst mapDispatchToProps = {\n  onGetCurretnUser: authOperations.getCurrentUser,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n// import logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport { contactsReducer } from './contacts';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n});\n\nconst persistor = persistStore(store);\n\nconst storePersistor = { store, persistor };\n\nexport default storePersistor;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainLink\":\"Navigation_mainLink__1Q72q\",\"mainLinkActive\":\"Navigation_mainLinkActive__1PetH\",\"mainNav\":\"Navigation_mainNav__2fTJc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"Modal_Modal__backdrop__2coS4\",\"Modal__content\":\"Modal_Modal__content__19IZD\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction(\n  'contacts/fetchContactsRequest',\n);\nexport const fetchContactsSuccess = createAction(\n  'contacts/fetchContactsSuccess',\n);\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactRequest = createAction('contacts/addContactRequest');\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\nexport const addContactError = createAction('contacts/addContactError');\n\nexport const editContactRequest = createAction('contacts/editContactRequest');\nexport const editContactSuccess = createAction('contacts/editContactSuccess');\nexport const editContactError = createAction('contacts/editContactError');\n\nexport const deleteContactRequest = createAction(\n  'contacts/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'contacts/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('contacts/deleteContactError');\n\nexport const changeFilter = createAction('contacts/changeFilter');\n","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  editContactRequest,\n  editContactSuccess,\n  editContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\n\n//axios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => dispatch(fetchContactsError(error)));\n};\n\nconst addContact = values => dispatch => {\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', values)\n    .then(({ data }) => {\n      return dispatch(addContactSuccess(data));\n    })\n    .catch(error => dispatch(addContactError(error)));\n};\n\nconst editContact = values => dispatch => {\n  dispatch(editContactRequest());\n  const { id } = values;\n  delete values.id;\n\n  axios\n    .patch(`/contacts/${id}`, values)\n    .then(({ data }) => {\n      return dispatch(editContactSuccess(data));\n    })\n    .catch(error => dispatch(editContactError(error)));\n};\n\nconst deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error)));\n};\n\nconst operationContacts = {\n  fetchContacts,\n  addContact,\n  deleteContact,\n  editContact,\n};\n\nexport default operationContacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getAllContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getLoading = state => state.contacts.loading;\n\nexport const getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return allContacts.filter(el => {\n      const foundPos = el.name.toLowerCase().indexOf(normalizedFilter);\n      return foundPos === -1 ? false : true;\n    });\n  },\n);\n\nconst operationSelectors = {\n  getAllContacts,\n  getFilter,\n  getLoading,\n  getVisibleContacts,\n};\n\nexport default operationSelectors;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  editContactRequest,\n  editContactSuccess,\n  editContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n  changeFilter,\n} from './contacts-actions';\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n  [editContactSuccess]: (state, { payload }) =>\n    state.map(todo => (todo.id === payload.id ? payload : todo)),\n});\n\nconst filter = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactRequest]: () => true,\n  [addContactSuccess]: () => false,\n  [addContactError]: () => false,\n  [editContactRequest]: () => true,\n  [editContactSuccess]: () => false,\n  [editContactError]: () => false,\n  [deleteContactRequest]: () => true,\n  [deleteContactSuccess]: () => false,\n  [deleteContactError]: () => false,\n});\n\nconst error = createReducer(null, {});\n\nconst contactsReducer = combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n\nexport default contactsReducer;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport s from './Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      if (this.props?.onClose) {\n        this.props.onClose();\n      }\n    }\n  };\n\n  handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      if (this.props?.onClose) {\n        this.props.onClose();\n      }\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.Modal__backdrop} onClick={this.handleBackdropClick}>\n        <div className={s.Modal__content}>{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n"],"sourceRoot":""}